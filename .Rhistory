p
datafile <- 'col_labels.csv'
meta <- readr::read_csv(paste(src,datafile,sep=''))
i <- 7L
j <- 19L
x = base::log(data[,i])[[1]]
y = base::log(data[,j])[[1]]
xlab <- paste(meta[i,1][[1]], meta[i,2][[1]])
ylab <- paste(meta[j,1][[1]], meta[j,2][[1]])
p <- ggplot() + geom_point(aes(x=x, y=y, colour='firebrickred'))
p <- p + theme(legend.position = 'none')
p <- p + theme(plot.title = element_text(hjust=0.5, vjust=0, size=20))
p <- p + xlab(xlab) + ylab(ylab) + ggtitle('GGtitle')
p
ols <- stats::lm(y ~ x)
ols
m <- ols$coefficients['x']
b <- ols$coefficients['(Intercept)']
p <- p + geom_abline(slope=ols$coefficients['x'], intercept = ols$coefficients['(Intercept)'],
colour='navyblue', size=2)
p
filename <- paste(dst, tolower(sub(' ', '_', meta[i,1][[1]])),
'_vs_',
tolower(sub(' ', '_', meta[j,1][[1]])), sep='')
ggplot2::ggsave(filename, p, device='jpg')
xmax = exp(b/(1-m))
2*(3*xmax/(4*base::pi))^(1/3)
library(tidyverse)
getwd()
# only works if you are using RStudio
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
src <- '../data/'
dst <- '../results/'
datafile <- 'traditional_phenotype_summary.csv'
data <- readr::read_csv(paste(src,datafile,sep=''))
data$wname <- base::as.factor(data$wname)
base::colnames(data)
p <- ggplot(data, aes(nut_vol, air_vol)) + geom_point(aes(colour=wname))
p
datafile <- 'col_labels.csv'
meta <- readr::read_csv(paste(src,datafile,sep=''))
i <- 7L
j <- 19L
x = base::log(data[,i])[[1]]
y = base::log(data[,j])[[1]]
xlab <- paste(meta[i,1][[1]], meta[i,2][[1]])
ylab <- paste(meta[j,1][[1]], meta[j,2][[1]])
p <- ggplot() + geom_point(aes(x=x, y=y, colour='firebrickred'))
p <- p + theme(legend.position = 'none')
p <- p + theme(plot.title = element_text(hjust=0.5, vjust=0, size=20))
p <- p + xlab(xlab) + ylab(ylab) + ggtitle('GGtitle')
p
p <- ggplot(data, aes(nut_vol, air_vol)) + geom_point(aes(colour=wname))
p
datafile <- 'col_labels.csv'
meta <- readr::read_csv(paste(src,datafile,sep=''))
i <- 7L
j <- 19L
x = base::log(data[,i])[[1]]
y = base::log(data[,j])[[1]]
xlab <- paste(meta[i,1][[1]], meta[i,2][[1]])
ylab <- paste(meta[j,1][[1]], meta[j,2][[1]])
p <- ggplot() + geom_point(aes(x=x, y=y, colour='firebrickred'))
p <- p + theme(legend.position = 'none')
p <- p + theme(plot.title = element_text(hjust=0.5, vjust=0, size=20))
p <- p + xlab(xlab) + ylab(ylab) + ggtitle('GGtitle')
p
ols <- stats::lm(y ~ x)
ols
m <- ols$coefficients['x']
b <- ols$coefficients['(Intercept)']
p <- p + geom_abline(slope=ols$coefficients['x'], intercept = ols$coefficients['(Intercept)'],
colour='navyblue', size=2)
p
p + geom_abline(slope=1,intercept = -1, size=1, colour='forestgreen')
filename <- paste(dst, tolower(sub(' ', '_', meta[i,1][[1]])),
'_vs_',
tolower(sub(' ', '_', meta[j,1][[1]])), sep='')
ggplot2::ggsave(filename, p, device='jpg')
xmax = exp(b/(1-m))
2*(3*xmax/(4*base::pi))^(1/3)
################################################################################
##################################PREP WORK#####################################
################################################################################
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(magrittr)
library(dplyr)
library(rstatix)
library(RColorBrewer)
library(AICcmodavg)
library(multcompView)
library(viridis)
wd <- "~/Desktop/uav_flood_analysis/RStudio/Data"
# name of the file that is being graphed
x <- "200615_Indices_corrected_plots.csv"
# name of the new file at the end
#z <- "210721_Best_PlotID.csv"
# early date for comparison
#m <- "210622_All_Data.csv"
setwd(wd)
wd
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
df
str(x)
str("x")
str(df)
# import the first All_Data csv file
df <- na.omit(read.csv(x, header = TRUE, sep = ","))
# Graph heatmap of NDVI
ggplot(df, aes(x = QGIS_row, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-0.2, 1), breaks=seq(-0.2,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# Graph heatmap of NDVI
ggplot(df, aes(x = QGIS_rows, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-0.2, 1), breaks=seq(-0.2,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# Graph heatmap of NDVI
ggplot(df, aes(x = QGIS_rows, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 0.6), breaks=seq(0,0.6,by=0.05)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# Graph heatmap of NDVI
ggplot(df, aes(x = QGIS_rows, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 0.5), breaks=seq(0,0.5,by=0.05)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# Graph heatmap of NDVI
ggplot(df, aes(x = QGIS_rows, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 1), breaks=seq(0,1,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# Graph heatmap of NDVI
ggplot(df, aes(x = QGIS_rows, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 0.5), breaks=seq(0,0.5,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# Graph heatmap of NDVI
ggplot(df, aes(x = QGIS_rows, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 1), breaks=seq(0,1,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
################################################################################
##################################PREP WORK#####################################
################################################################################
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(magrittr)
library(dplyr)
library(rstatix)
library(RColorBrewer)
library(AICcmodavg)
library(multcompView)
library(viridis)
wd <- "/Users/madi_mitchell/Desktop/uav_flood_analysis/RStudio/Data/2021_Rollins5_TANU/"
# name of the file that is being graphed
x <- "210622_Rollins5_Indices_Agisoft.csv"
# name of the new file at the end
#z <- "210721_Best_PlotID.csv"
# early date for comparison
#m <- "210622_All_Data.csv"
setwd(wd)
setwd("/Users/madi_mitchell/Desktop/uav_flood_analysis/Data/2021_Rollins5_TAMU")
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-1, 1), breaks=seq(-1,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
View(df)
# column and row info from excel
m <- "Rollins_Field_Map_NEW.csv"
# bring in the csv files
DF1 <- read.csv(x)
DF2 <- read.csv(m)
#merge...you can only do two at a time
Data <- merge(DF1, DF2, by = "PlotID")
View(DF1)
View(DF2)
#make the names uniform so that they can be properly merged
names(DF4)[names(DF4) == 'MOplot'] <- 'PlotID'
names(DF2)[names(DF2) == 'MOplot'] <- 'PlotID'
#merge...you can only do two at a time
Data <- merge(DF1, DF2, by = "PlotID")
Data
View(Data)
#select only the wanted columns of data
AllDATA_cleaned <- Data[ , c("PlotID","LAI","Height","BI","GLI","NGRDI","VARI","BGI","NDVI","Pedigree","Exp_row","Exp_range")]
#select only the wanted columns of data
AllDATA_cleaned <- Data[ , c("PlotID","LAI","Height","BI","GLI","NGRDI","VARI","BGI","NDVI","Pedigree","Exp_row","Exp_range")]
#select only the wanted columns of data
AllDATA_cleaned <- Data[ , c("PlotID","BI","GLI","NGRDI","VARI","BGI","NDVI","Pedigree","Exp_row","Exp_range")]
#name for the final data csv to be exported to wd
a <- "210622_Rollins5_Indices_Agisoft_clean.csv"
write.csv(AllDATA_cleaned, file = a)
View(AllDATA_cleaned)
# Indices file name
x <- "210701_Rollins5_Indices_Agisoft.csv"
# Indices file name
x <- "210701_Rollins5_Indices_Agisoft.csv"
wd
# column and row info from excel
m <- "Rollins_Field_Map_NEW.csv"
#name for the final data csv to be exported to wd
a <- "210701_Rollins5_Indices_Agisoft_clean.csv"
# bring in the csv files
DF1 <- read.csv(x)
DF2 <- read.csv(m)
names(DF2)[names(DF2) == 'MOplot'] <- 'PlotID'
#merge...you can only do two at a time
Data <- merge(DF1, DF2, by = "PlotID")
Data
#select only the wanted columns of data
AllDATA_cleaned <- Data[ , c("PlotID","BI","GLI","NGRDI","VARI","BGI","NDVI","Pedigree","Exp_row","Exp_range")]
write.csv(AllDATA_cleaned, file = a)
# Indices file name
x <- "210721_Rollins5_Indices_Agisoft.csv"
#name for the final data csv to be exported to wd
a <- "210721_Rollins5_Indices_Agisoft_clean.csv"
# Indices file name
x <- "210721_Rollins5_Indices_Agisoft.csv"
# column and row info from excel
m <- "Rollins_Field_Map_NEW.csv"
#name for the final data csv to be exported to wd
a <- "210721_Rollins5_Indices_Agisoft_clean.csv"
# bring in the csv files
DF1 <- read.csv(x)
DF2 <- read.csv(m)
names(DF2)[names(DF2) == 'MOplot'] <- 'PlotID'
#merge...you can only do two at a time
Data <- merge(DF1, DF2, by = "PlotID")
#select only the wanted columns of data
AllDATA_cleaned <- Data[ , c("PlotID","BI","GLI","NGRDI","VARI","BGI","NDVI","Pedigree","Exp_row","Exp_range")]
write.csv(AllDATA_cleaned, file = a)
# name of the file that is being graphed
x <- "210622_Rollins5_Indices_Agisoft_clean.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-1, 1), breaks=seq(-1,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# name of the file that is being graphed
x <- "210701_Rollins5_Indices_Agisoft_clean.csv"
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-1, 1), breaks=seq(-1,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-1, 1), breaks=seq(-1,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# name of the file that is being graphed
x <- "210721_Rollins5_Indices_Agisoft_clean.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-1, 1), breaks=seq(-1,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
setwd("/Users/madi_mitchell/Desktop/uav_flood_analysis/Data/2021_Rollins5_TAMU")
# Indices file name
x <- "210622_Rollins5_Indices_Agisoft_nosoil.csv"
# column and row info from excel
m <- "Rollins_Field_Map_NEW.csv"
#name for the final data csv to be exported to wd
a <- "210622_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
# bring in the csv files
DF1 <- read.csv(x)
DF2 <- read.csv(m)
#DF3 <- read.csv(z)
#DF4 <- read.csv(m)
names(DF2)[names(DF2) == 'MOplot'] <- 'PlotID'
#merge...you can only do two at a time
Data <- merge(DF1, DF2, by = "PlotID")
#select only the wanted columns of data
AllDATA_cleaned <- Data[ , c("PlotID","BI","GLI","NGRDI","VARI","BGI","NDVI","Pedigree","Exp_row","Exp_range")]
write.csv(AllDATA_cleaned, file = a)
# Indices file name
x <- "210701_Rollins5_Indices_Agisoft_nosoil.csv"
#name for the final data csv to be exported to wd
a <- "210701_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
# Indices file name
x <- "210701_Rollins5_Indices_Agisoft_nosoil.csv"
# column and row info from excel
m <- "Rollins_Field_Map_NEW.csv"
#name for the final data csv to be exported to wd
a <- "210701_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
# bring in the csv files
DF1 <- read.csv(x)
DF2 <- read.csv(m)
#DF3 <- read.csv(z)
#DF4 <- read.csv(m)
names(DF2)[names(DF2) == 'MOplot'] <- 'PlotID'
#merge...you can only do two at a time
Data <- merge(DF1, DF2, by = "PlotID")
#select only the wanted columns of data
AllDATA_cleaned <- Data[ , c("PlotID","BI","GLI","NGRDI","VARI","BGI","NDVI","Pedigree","Exp_row","Exp_range")]
write.csv(AllDATA_cleaned, file = a)
# Indices file name
x <- "210721_Rollins5_Indices_Agisoft_nosoil.csv"
# column and row info from excel
m <- "Rollins_Field_Map_NEW.csv"
#name for the final data csv to be exported to wd
a <- "210721_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
# bring in the csv files
DF1 <- read.csv(x)
DF2 <- read.csv(m)
#DF3 <- read.csv(z)
#DF4 <- read.csv(m)
names(DF2)[names(DF2) == 'MOplot'] <- 'PlotID'
#merge...you can only do two at a time
Data <- merge(DF1, DF2, by = "PlotID")
#select only the wanted columns of data
AllDATA_cleaned <- Data[ , c("PlotID","BI","GLI","NGRDI","VARI","BGI","NDVI","Pedigree","Exp_row","Exp_range")]
write.csv(AllDATA_cleaned, file = a)
# name of the file that is being graphed
x <- "210622_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
# name of the file that is being graphed
x <- "210622_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-1, 1), breaks=seq(-1,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
################################################################################
##################################PREP WORK#####################################
################################################################################
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(magrittr)
library(dplyr)
library(rstatix)
library(RColorBrewer)
library(AICcmodavg)
library(multcompView)
library(viridis)
wd <- "/Users/madi_mitchell/Desktop/uav_flood_analysis/RStudio/Data/2020_BradC5b/Corrected_Plots/"
# name of the file that is being graphed
x <- "210622_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
# name of the new file at the end
#z <- "210721_Best_PlotID.csv"
# early date for comparison
#m <- "210622_All_Data.csv"
setwd(wd)
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-1, 1), breaks=seq(-1,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# name of the file that is being graphed
x <- "210701_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-1, 1), breaks=seq(-1,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# name of the file that is being graphed
x <- "210721_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-1, 1), breaks=seq(-1,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
